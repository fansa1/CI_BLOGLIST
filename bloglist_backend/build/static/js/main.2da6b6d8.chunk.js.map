{"version":3,"sources":["components/Notification.js","components/ErrorMessage.js","services/blogs.js","services/login.js","components/Togglable.js","components/ClickLike.js","components/RemoveBlog.js","components/Blog.js","hooks/index.js","App.js","index.js"],"names":["Notification","_ref","message","react_default","a","createElement","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorMessage","baseUrl","token","getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","remove","_ref3","_callee3","id","_context3","delete","concat","_x2","services_blogs","update","_ref4","_callee4","_context4","put","console","log","_x3","_x4","setToken","newToken","services_login","login","credentials","Togglable","React","forwardRef","props","ref","_useState","useState","_useState2","slicedToArray","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","children","ClickLikeButton","blog","propTypes","PropTypes","object","isRequired","blogObject","title","author","url","likes","String","blogService","removeBlog","window","confirm","Blog","user","showAll","setShowAll","BoxStyle","paddingTop","paddingLeft","border","borderWidth","Fragment","name","useField","type","autoComplete","className","value","setValue","onChange","event","target","App","blogs","setBlogs","_useState3","_useState4","notificationMessage","setNotificationMessage","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","setUser","useEffect","then","initialBlogs","sort","b","A","B","loggedUserJSON","localStorage","getItem","JSON","parse","_useField","_useField2","resetUserName","inputForUserName","_useField3","_useField4","resetPassword","inputForPassword","_useField5","_useField6","resetTitle","inputForBlogTitle","_useField7","_useField8","resetAuthor","inputForBlogAuthor","_useField9","_useField10","resetUrl","inputForBlogUrl","handleLogin","logincredentials","_user2","preventDefault","username","password","loginService","setItem","stringify","t0","setTimeout","blogFormRef","createRef","addBlog","blogeja","current","components_Notification","components_ErrorMessage","onSubmit","clear","location","reload","components_Togglable","AllBlogs","rivit","map","components_Blog","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2da6b6d8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n        const notificationStyle =  {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n      }\r\n  \r\n  \r\n    if (message === null) {\r\n    return null\r\n  }\r\n\r\n if(message !== null){\r\n    return(\r\n        <div style={notificationStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n}\r\n\r\n  export default Notification","import React from 'react'\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n    const errorStyle =  {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n      }\r\n  \r\n    if (message === null) {\r\n    return null\r\n  }\r\n\r\n  \r\n\r\nif(message !== null){\r\n    return(\r\n        <div style={errorStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n}\r\n\r\n  export default ErrorMessage","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken ) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async(id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  console.log(response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import PropTypes from 'prop-types'\r\nimport blogService from '../services/blogs'\r\n\r\n\r\nconst ClickLikeButton = (blog) => {\r\n\r\n  ClickLikeButton.propTypes = {\r\n    props: PropTypes.object.isRequired\r\n  }\r\n   \r\n\r\n  const blogObject = {\r\n    title: blog.title,\r\n    author: blog.author,\r\n    url: blog.url,\r\n    likes: String(blog.likes+1)\r\n  }\r\n\r\n  blogService.update(blog.id,blogObject)\r\n  \r\n  //blogService.getAll()\r\n  //.then(initialBlogs => setBlogs(initialBlogs))\r\n}\r\n\r\nexport default ClickLikeButton","import PropTypes from 'prop-types'\r\nimport blogService from '../services/blogs'\r\n\r\nconst removeBlog = (blog) => {\r\n\r\n  removeBlog.propTypes = {\r\n    props: PropTypes.object.isRequired\r\n  }\r\n\r\n  if (window.confirm(`Are you sure you wish to delete the blog ${blog.title}?`)){\r\n    blogService.remove(blog.id)\r\n  }}\r\n\r\nexport default removeBlog","import React, { useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ClickLikeButton from './ClickLike'\r\nimport removeBlog from './RemoveBlog'\r\n\r\n\r\nconst Blog = ({blog,user}) => {\r\n\r\n  Blog.propTypes = {\r\n    blog: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n  }\r\n\r\n  const [showAll, setShowAll] = useState(false)\r\n  \r\n  const BoxStyle= {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n  }\r\n\r\n  const toggleVisibility = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n\r\n  return(\r\n        <>\r\n        {showAll === false\r\n          ?\r\n          <div style={BoxStyle} onClick={() => toggleVisibility()}>\r\n            {blog.title} {blog.author}\r\n          </div>\r\n          :\r\n          <div style={BoxStyle}>\r\n            <div onClick={() => toggleVisibility()}>{blog.title} {blog.author}</div>\r\n            <p>{blog.url}</p>\r\n            <p>{blog.likes} likes <button onClick={()=>ClickLikeButton(blog)}>like</button></p>\r\n            <p>added by {blog.user.name} </p>\r\n            {blog.user.name===user.name && <p><button onClick={()=>removeBlog(blog)}>remove </button></p>}\r\n          </div>\r\n        }\r\n        </>\r\n  )\r\n}\r\n    \r\nexport default Blog","import { useState } from 'react'\r\n\r\nexport const useField = (type,autoComplete,className) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n  setValue('')\r\n    \r\n  }\r\n  \r\n\r\n  return [\r\n    reset,\r\n    {\r\n    type,\r\n    autoComplete,\r\n    value,\r\n    className,\r\n    onChange\r\n  }\r\n  ]\r\n}\r\n\r\n// moduulissa voi olla monta nimettyä eksportia\r\nexport const useAnotherHook = () => {\r\n  // ...\r\n}\r\n\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState, useEffect } from 'react'\r\nimport Notification from './components/Notification'\r\nimport ErrorMessage from './components/ErrorMessage'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport Togglable from './components/Togglable'\r\nimport Blog from './components/Blog'\r\nimport PropTypes from 'prop-types'\r\nimport  { useField } from './hooks'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [blogs, setBlogs] = useState([])\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    blogService\r\n      .getAll()\r\n      .then(initialBlogs => setBlogs(initialBlogs.sort((a, b) => {\r\n        const A = a.likes\r\n        const B = b.likes\r\n        return (A < B) ? -1 : (A > B) ? 1 : 0\r\n      })))\r\n  }, [notificationMessage])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  \r\n  \r\n  const [resetUserName, inputForUserName]= useField('text', 'username', 'Usernameinput') \r\n  //const {reset, ...inputUserNameNoReset}= inputForUserName  \r\n  const [resetPassword, inputForPassword] = useField('text', 'password', 'Passwordinput') \r\n  \r\n  const [resetTitle, inputForBlogTitle] = useField('text') \r\n  \r\n  const [resetAuthor, inputForBlogAuthor] = useField('text') \r\n  \r\n  const [resetUrl, inputForBlogUrl] = useField('text') \r\n  \r\n  \r\n  \r\n  \r\n\r\n  const rows = () => {\r\n\r\n    return(\r\n      blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} user={user}/>\r\n      ))}\r\n\r\n  const AllBlogs = ({ rivit }) => {\r\n\r\n    AllBlogs.propTypes = {\r\n      rivit: PropTypes.object.isRequired\r\n    }\r\n\r\n    return(\r\n    <>\r\n    {rivit}\r\n    </>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const loginForm = () => {\r\n\r\n    return(\r\n    <>\r\n    <h2>login</h2>\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n        <input\r\n         {...inputForUserName}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input\r\n          {...inputForPassword}\r\n        />\r\n      </div>\r\n      <button className=\"loginbutton\" type=\"submit\">login</button>\r\n    </form>\r\n    </>\r\n    )}\r\n\r\n    const handleLogin = async (event) => {\r\n      event.preventDefault()\r\n      console.log('logging in with', inputForUserName.value, inputForPassword.value)\r\n      try {\r\n        const logincredentials = {\r\n          username: inputForUserName.value,\r\n          password: inputForPassword.value\r\n        }\r\n        const user = await loginService.login(logincredentials)\r\n  \r\n        blogService.setToken(user.token)\r\n        window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\r\n        setUser(user)\r\n        resetUserName()\r\n        resetPassword()\r\n      } catch (exception) {\r\n        setErrorMessage('wrong username or password')\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      }\r\n    }\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  const blogForm = () => {\r\n    return(\r\n      <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\r\n\r\n        <form onSubmit={addBlog}>\r\n          <div> title\r\n            <input {...inputForBlogTitle}/>\r\n          </div>\r\n          <div> author\r\n            <input {...inputForBlogAuthor}/>\r\n          </div>\r\n          <div> url\r\n            <input {...inputForBlogUrl}/>\r\n          </div>\r\n          <button type=\"submit\">create</button>\r\n        </form>\r\n\r\n      </Togglable>\r\n    )}\r\n\r\n\r\n  const addBlog = async (event) => {\r\n    event.preventDefault()\r\n    const blogObject = {\r\n      title: inputForBlogTitle.value,\r\n      author: inputForBlogAuthor.value,\r\n      url: inputForBlogUrl.value,\r\n      likes: 0\r\n    }\r\n    blogService.create(blogObject)\r\n    resetTitle()\r\n    resetAuthor()\r\n    resetUrl()\r\n    blogFormRef.current.toggleVisibility()\r\n    const blogeja = await blogService.getAll()\r\n    setBlogs(blogeja)\r\n    setNotificationMessage(`A new blog\"${inputForBlogTitle.value}\" by ${inputForBlogAuthor.value} was added to the database`)\r\n    setTimeout(() => {\r\n      setNotificationMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n\r\n  const LogoutAndRefresh = () => {\r\n    window.localStorage.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n      <Notification message={notificationMessage}/>\r\n      <ErrorMessage message={errorMessage}/>\r\n\r\n      {user === null\r\n        ?\r\n        loginForm()\r\n        :\r\n        <div>\r\n          <p>{user.name} logged in <button onClick={() => LogoutAndRefresh()}>logout</button></p>\r\n          <h1>Create</h1>\r\n          {blogForm()}\r\n          <ul>\r\n            <AllBlogs rivit={rows()}/>\r\n          </ul>\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}